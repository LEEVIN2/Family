<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.animal.mappers.BoardMapper">

	<insert id="writePro">
		insert into board(boardNum,title,content,id,submitTime)
		values(#{boardNum},#{title},#{content},#{id},#{submitTime})
	</insert>
	
	<insert id="writePro2">
		insert into comment(boardNum,id,content,submitTime)
		values(#{boardNum},#{id},#{content},#{submitTime})
	</insert>
	
	<insert id="addFilePath">
    	insert into board_file(boardNum, filePath)
    	values(#{boardNum}, #{filePath})
	</insert>
	
	<select id="getWrittenList" resultType="com.animal.domain.BoardDTO">
	SELECT b.boardNum, b.id, m.nickname, DATE_FORMAT(b.submitTime, '%Y-%m-%d') AS 'submitTime', b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
FROM board b
LEFT JOIN (
	SELECT boardNum, filePath
	FROM board_file
	WHERE (boardNum, fileNum) IN (
		SELECT boardNum, MAX(fileNum)
		FROM board_file
		GROUP BY boardNum)
) as f ON b.boardNum = f.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as commentCnt
	FROM comment
	GROUP BY boardNum
) as co ON b.boardNum = co.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as board_likeCnt
	FROM board_like
	GROUP BY boardNum
) as li ON b.boardNum = li.boardNum
LEFT JOIN (
	SELECT id, nickname
	FROM member
) as m ON b.id = m.id
where b.id = #{id}
order by boardNum desc;
	</select>
	
	<select id="getWrittenList2" resultType="com.animal.domain.BoardDTO">
	SELECT b.boardNum, b.id, m.nickname, DATE_FORMAT(b.submitTime, '%Y-%m-%d') AS 'submitTime', b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
FROM board b
LEFT JOIN (
	SELECT boardNum, filePath
	FROM board_file
	WHERE (boardNum, fileNum) IN (
		SELECT boardNum, MAX(fileNum)
		FROM board_file
		GROUP BY boardNum)
) as f ON b.boardNum = f.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as commentCnt
	FROM comment
	GROUP BY boardNum
) as co ON b.boardNum = co.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as board_likeCnt
	FROM board_like
	GROUP BY boardNum
) as li ON b.boardNum = li.boardNum
LEFT JOIN (
	SELECT id, nickname
	FROM member
) as m ON b.id = m.id
WHERE b.boardNum IN (
	SELECT boardNum
	FROM comment
	WHERE id = #{id}
)
AND b.id != #{id}
ORDER BY b.boardNum DESC;
	</select>
	
	<select id="getSearchList" resultType="com.animal.domain.BoardDTO">
    <if test="search == null or search == ''">
        select *
        from board
        where 1 = 0
    </if>
    <if test="search != null and search != ''">
        SELECT b.boardNum, b.id, m.nickname, b.submitTime, b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
FROM board b
LEFT JOIN (
	SELECT boardNum, filePath
	FROM board_file
	WHERE (boardNum, fileNum) IN (
		SELECT boardNum, MAX(fileNum)
		FROM board_file
		GROUP BY boardNum)
) as f ON b.boardNum = f.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as commentCnt
	FROM comment
	GROUP BY boardNum
) as co ON b.boardNum = co.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as board_likeCnt
	FROM board_like
	GROUP BY boardNum
) as li ON b.boardNum = li.boardNum
LEFT JOIN (
	SELECT id, nickname
	FROM member
) as m ON b.id = m.id
WHERE m.nickname LIKE CONCAT('%', #{search}, '%')
OR b.title LIKE CONCAT('%', #{search}, '%')
OR b.content LIKE CONCAT('%', #{search}, '%')
ORDER BY b.boardNum DESC;
    </if>
</select>
	
<!-- 	이거 나중에 앞에 FR붙은 보드넘만 찾게 수정해야됨 (현재 이상태는 전체에서 찾는거임) -->
	<select id="getFreesearchList" resultType="com.animal.domain.BoardDTO">
    <if test="search == null or search == ''">
        select *
        from board
        where 1 = 0
    </if>
    <if test="search != null and search != ''">
        SELECT b.boardNum, b.id, m.nickname, b.submitTime, b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
FROM board b
LEFT JOIN (
	SELECT boardNum, filePath
	FROM board_file
	WHERE (boardNum, fileNum) IN (
		SELECT boardNum, MAX(fileNum)
		FROM board_file
		GROUP BY boardNum)
) as f ON b.boardNum = f.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as commentCnt
	FROM comment
	GROUP BY boardNum
) as co ON b.boardNum = co.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as board_likeCnt
	FROM board_like
	GROUP BY boardNum
) as li ON b.boardNum = li.boardNum
LEFT JOIN (
	SELECT id, nickname
	FROM member
) as m ON b.id = m.id
WHERE m.nickname LIKE CONCAT('%', #{search}, '%')
OR b.title LIKE CONCAT('%', #{search}, '%')
OR b.content LIKE CONCAT('%', #{search}, '%')
ORDER BY b.boardNum DESC;
    </if>
</select>
	
	<select id="getBoardList" resultType="com.animal.domain.BoardDTO">
		SELECT b.boardNum, b.id, m.nickname, b.submitTime, b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
FROM board b
LEFT JOIN (
	SELECT boardNum, filePath
	FROM board_file
	WHERE (boardNum, fileNum) IN (
		SELECT boardNum, MAX(fileNum)
		FROM board_file
		GROUP BY boardNum)
) as f ON b.boardNum = f.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as commentCnt
	FROM comment
	GROUP BY boardNum
) as co ON b.boardNum = co.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as board_likeCnt
	FROM board_like
	GROUP BY boardNum
) as li ON b.boardNum = li.boardNum
LEFT JOIN (
	SELECT id, nickname
	FROM member
) as m ON b.id = m.id
order by boardNum desc limit #{startRow}, #{pageSize};
	</select>
	
	<select id="getBoardHotList" resultType="com.animal.domain.BoardDTO">
		SELECT * FROM (
    SELECT b.boardNum, b.id, m.nickname, m.profile, b.submitTime, b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
    FROM board b
    LEFT JOIN (
        SELECT boardNum, filePath
        FROM board_file
        WHERE (boardNum, fileNum) IN (
            SELECT boardNum, MAX(fileNum)
            FROM board_file
            GROUP BY boardNum)
    ) as f ON b.boardNum = f.boardNum
    LEFT JOIN (
        SELECT boardNum, COUNT(*) as commentCnt
        FROM comment
        GROUP BY boardNum
    ) as co ON b.boardNum = co.boardNum
    LEFT JOIN (
        SELECT boardNum, COUNT(*) as board_likeCnt
        FROM board_like
        GROUP BY boardNum
    ) as li ON b.boardNum = li.boardNum
    LEFT JOIN (
	SELECT id, nickname, profile
	FROM member
) as m ON b.id = m.id
    WHERE co.commentCnt >= 3 OR li.board_likeCnt >= 3
    ORDER BY b.submitTime DESC
) AS result limit 7;
	</select>
	
	<select id="getBoardBestList" resultType="com.animal.domain.BoardDTO">
		SELECT * FROM (
    SELECT b.boardNum, b.id, m.nickname, b.submitTime, b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
    FROM board b
    LEFT JOIN (
        SELECT boardNum, filePath
        FROM board_file
        WHERE (boardNum, fileNum) IN (
            SELECT boardNum, MAX(fileNum)
            FROM board_file
            GROUP BY boardNum)
    ) as f ON b.boardNum = f.boardNum
    LEFT JOIN (
        SELECT boardNum, COUNT(*) as commentCnt
        FROM comment
        GROUP BY boardNum
    ) as co ON b.boardNum = co.boardNum
    LEFT JOIN (
        SELECT boardNum, COUNT(*) as board_likeCnt
        FROM board_like
        GROUP BY boardNum
    ) as li ON b.boardNum = li.boardNum
    LEFT JOIN (
	SELECT id, nickname
	FROM member
) as m ON b.id = m.id
    WHERE co.commentCnt >= 5 OR li.board_likeCnt >= 5
    ORDER BY b.submitTime DESC
) AS result;
	</select>
	
	<select id="getCommentList" resultType="com.animal.domain.BoardDTO">
	SELECT c.boardNum, c.id, m.nickname, c.content, c.submitTime
FROM comment c
LEFT JOIN member m
ON c.id = m.id
WHERE c.boardNum = #{boardNum}
order by boardNum desc;
	</select>
	
	 <select id="getDetail" resultType="com.animal.domain.BoardDTO">
    SELECT b.boardNum, b.id, m.nickname, b.submitTime, b.title, b.content, b.viewCnt
FROM board b
LEFT JOIN member m
ON b.id = m.id
    WHERE b.boardNum = #{boardNum};
</select>

<!-- 좋아요 눌럿는지 안눌럿는지 -->
	<select id="findLike" resultType="int">
		select count(*)
		from board_like
		where boardNum = #{boardNum} and id = #{id};
	</select>
	
	<select id="findLikeCnt" resultType="int">
		select count(*)
		from board_like
		where boardNum = #{boardNum};
	</select>
	
	<insert id="likeUp">
		insert into board_like(boardNum, id, submitTime)
		values (#{boardNum}, #{id}, #{submitTime});
	</insert>
	
	<delete id="likeDown">
	  	delete from board_like
	  	where boardNum = #{boardNum} and id = #{id};
	  </delete>
	

<select id="getFilePaths" resultType="string">
    SELECT filePath
    FROM board_file
    WHERE board_file.boardNum = #{boardNum}
    order by fileNum desc
</select>

<update id="increaseViewCnt">
    UPDATE board
	SET viewCnt = IFNULL(viewCnt, 0) + 1
	WHERE boardNum = #{boardNum};
</update>

<select id="getFreeboardCount" resultType="java.lang.Integer">
		select count(*)
      	from board
    </select>

<!-- 참고로 위에 있는 getBoardList랑 코드 같음 -->
	<select id="getBoardNewList" resultType="com.animal.domain.BoardDTO">
		SELECT b.boardNum, b.id, m.nickname, m.profile, b.submitTime, b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
FROM board b
LEFT JOIN (
	SELECT boardNum, filePath
	FROM board_file
	WHERE (boardNum, fileNum) IN (
		SELECT boardNum, MAX(fileNum)
		FROM board_file
		GROUP BY boardNum)
) as f ON b.boardNum = f.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as commentCnt
	FROM comment
	GROUP BY boardNum
) as co ON b.boardNum = co.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as board_likeCnt
	FROM board_like
	GROUP BY boardNum
) as li ON b.boardNum = li.boardNum
LEFT JOIN (
	SELECT id, nickname, profile
	FROM member
) as m ON b.id = m.id
order by submitTime  DESC LIMIT 7;
    </select>
    
	<!-- 무한스크롤 -->
    <select id="getLoadMoreData" resultType="com.animal.domain.BoardDTO">
    SELECT b.boardNum, b.id, m.nickname, b.submitTime, b.title, b.content, f.filePath, b.viewCnt, co.commentCnt, li.board_likeCnt
FROM board b
LEFT JOIN (
	SELECT boardNum, filePath
	FROM board_file
	WHERE (boardNum, fileNum) IN (
		SELECT boardNum, MAX(fileNum)
		FROM board_file
		GROUP BY boardNum)
) as f ON b.boardNum = f.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as commentCnt
	FROM comment
	GROUP BY boardNum
) as co ON b.boardNum = co.boardNum
LEFT JOIN (
	SELECT boardNum, COUNT(*) as board_likeCnt
	FROM board_like
	GROUP BY boardNum
) as li ON b.boardNum = li.boardNum
LEFT JOIN (
	SELECT id, nickname
	FROM member
) as m ON b.id = m.id
order by submitTime  DESC
LIMIT #{start}, #{limit};
</select>
	
</mapper>